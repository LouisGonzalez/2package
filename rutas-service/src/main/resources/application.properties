server.port=8081
spring.kafka.producer.bootstrap-servers:172.28.85.50:9092
spring.kafka.bootstrap-servers=172.28.85.50:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer 


spring.kafka.consumer.group-id: ruta
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.name=order_topics
server.error.include-message=always


spring.kafka.topic.name2=inicial_topics

spring.kafka.topic.name3=checkpoints

spring.kafka.topic.name4=mover_topics

spring.kafka.topic.name5=siguiente_topics

spring.kafka.topic.name6=next_topics


spring.jpa.database=POSTGRESQL
spring.datasource.driver-class-name=org.postgresql.Driver
spring.sql.init.platform=postgresql
spring.datasource.url=jdbc:postgresql://localhost:5432/rutas
spring.datasource.username=postgres
spring.datasource.password=database123
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
